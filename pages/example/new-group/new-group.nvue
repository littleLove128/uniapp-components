<template>
	<view>
		<top-title-arrow centerTitle>
			<text>展开分组选择</text>
		</top-title-arrow>
		<div class="example-body">
			<view class="pageData">
				<div class="line" 
				:style="fold?'':'border-bottom-left-radius:10px;border-bottom-right-radius:10px'" >
					<div class="left">Please select question category</div>
					<div  style="font-size: 24rpx;" :class="['rightIcon', fold?'iconshouhui':'iconxiala']" @click="open"></div>
				</div>
				<div 
				:style="index==5?'border-bottom-left-radius:10px;border-bottom-right-radius:10px':''" 
				class="lists" v-if="fold" v-for="index in 5" :key='index'  ref="child">
					<div class="word" >Upgrade questions</div>
					<div class="choice" @click="clickItem(index)" ></div>
				</div>
			</view>
		</div>
		
	</view>
</template>

<script>
	export default {
		data(){
			return{
				fold: false,
				isclicked:[]
			}
		},
		methods:{
			open(){
				this.fold = !this.fold;
				if(this.fold){
					this.isclicked = [];
				}
			},
			clickItem(i){
				console.log(this.isclicked.indexOf(i) !=-1);
				if(this.isclicked.indexOf(i) !=-1){//如果存在返回值的下标，不存在返回-1
					this.$refs.child[i-1].firstChild.className='word';
					this.$refs.child[i-1].childNodes[1].className='choice';
					this.isclicked.pop(i);
				} else{
					this.isclicked.push(i);
					this.$refs.child[i-1].firstChild.className='wordClicked';
					this.$refs.child[i-1].childNodes[1].className='choiceClicked'
				}
				
			}
		}
	}
</script>

<style lang="scss" scoped>
@import '../../../common/icons/iconfont.css' ;	
.example-body{
	width: 100%;
	height:100%;
	// background-color: #EFEFEF;
}
.pageData{
	margin: 15px;
	.line{
		border-top-left-radius: 10px;
		border-top-right-radius: 10px;
		// background-color: #2EBEF3;
		// height: 80rpx;
		display: flex;
		flex-direction: row;
		justify-content: space-between;
		padding: 10px 15px;
		.left{
			font-size: 28rpx;
			// color: #FFFFFF;
			width: 80%;
			overflow:hidden;
			text-overflow:ellipsis;
			white-space:nowrap
		}
		.rightIcon{
			font-family:iconfont;
			font-size:12rpx !important;
			// color: #FFFFFF;
		}
	}
	.lists{
		// border-bottom: 1px solid  #EDEDED;
		padding: 10px 15px;
		// background-color: #FFFFFF;
		display: flex;
		flex-direction: row;
		justify-content: space-between;
		.choice{
			width: 36rpx;
			height: 36rpx;
			box-sizing:border-box;
			// border: 2rpx solid #BEBFC4;
			border-radius: 50%;
		}
		.word{
			font-size: 28rpx;
			// color: #BEBFC4;
		}
		.choiceClicked{
			width: 36rpx;
			height: 36rpx;
			box-sizing:border-box;
			// border: 10rpx solid #2EBEF3;
			border-radius: 50%;
		}
		.wordClicked{
			font-size: 28rpx;
			// color: #2EBEF3;
		}
	}
}

</style>
